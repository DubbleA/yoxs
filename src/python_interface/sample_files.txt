1. Hello World

puts("hello", "world", "how", "are", "you")
let hello = fn() {
    puts("Hello World!");
};
hello();

2. Conditional Statements
let x = 10;
if (x > 5) {
    puts("x is greater than 5");
} else {
    puts("x is less than or equal to 5");
}

3. Factorial Program (n = 5 should be 120)
let factorial = fn(n) {
    if (n == 0) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
};
puts(factorial(5));

4. Working with Arrays & Recursion: (output should be 15)
let array = [1, 2, 3, 4, 5];
let sum = fn(arr, i) {
    if (i == len(arr)) {
        return 0;
    } else {
        return arr[i] + sum(arr, i + 1);
    }
};
puts(sum(array, 0));

5. Calculate the Power of a Number (Exponentiation) 2^8
let power = fn(base, exp) {
    if (exp == 0) {
        return 1;
    } else {
        return base * power(base, exp - 1);
    }
};
puts(power(2, 8)); 

6. Simple Calculator 
let add = fn(a, b) { return a + b; };
let subtract = fn(a, b) { return a - b; };
let multiply = fn(a, b) { return a * b; };
let divide = fn(a, b) { return a / b; };

puts("Add: " + add(10, 5));
puts("Subtract: " + subtract(10, 5));
puts("Multiply: " + multiply(10, 5));
puts("Divide: " + divide(10, 5));

7. Recursive String Reverse (Outputs "yeknoM")
let reverse = fn(s) {
    let helper = fn(s, i) {
        if (i < 0) {
            return "";
        } else {
            return s[i] + helper(s, i - 1);
        }
    };
    return helper(s, len(s) - 1);
};

puts(reverse("Monkey"));

8. Recursive Prime Number Check
let isPrime = fn(number) {
    let checkPrime = fn(number, divisor) {
        if (number < 2) {
            return false;
        } else if (divisor == 1) {
            return true;
        } else {
            if (number % divisor == 0) {
                return false;
            } else {
                return checkPrime(number, divisor - 1);
            }
        }
    };
    return checkPrime(number, number - 1);
};

let n = 19;
if (isPrime(n)) {
    puts(n + " is a prime number");
} else {
    puts(n + " is not a prime number");
}
